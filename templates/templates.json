{
  "remix": {
    "name": "Remix App",
    "description": "Full stack React framework",
    "category": "web",
    "installCommand": "npx create-remix@latest my-app"
  },
  "ecommerce": {
    "name": "E-commerce Platform",
    "description": "Complete online store setup",
    "category": "web",
    "installCommand": "npx create-next-app@latest my-store --typescript --tailwind --eslint"
  },
  "react": {
    "name": "React Application",
    "description": "Modern React with Vite and TailwindCSS",
    "category": "front",
    "installCommand": "npm create vite@latest my-react-app -- --template react-ts"
  },
  "nextjs": {
    "name": "Next.js App",
    "description": "Full-featured Next.js application",
    "category": "front",
    "installCommand": "npx create-next-app@latest my-next-app --typescript --tailwind --eslint"
  },
  "vue": {
    "name": "Vue.js App",
    "description": "Vue 3 with Composition API",
    "category": "front",
    "installCommand": "npm create vue@latest my-vue-app"
  },
  "angular": {
    "name": "Angular Application",
    "description": "Enterprise-ready Angular setup",
    "category": "front",
    "installCommand": "ng new my-angular-app"
  },
  "svelte": {
    "name": "SvelteKit App",
    "description": "Modern Svelte with SSR",
    "category": "front",
    "installCommand": "npm create svelte@latest my-svelte-app"
  },
  "nuxt": {
    "name": "Nuxt.js App",
    "description": "Vue.js framework for SSR",
    "category": "front",
    "installCommand": "npx nuxi@latest init my-nuxt-app"
  },
  "gatsby": {
    "name": "Gatsby Site",
    "description": "Static site generator with React",
    "category": "front",
    "installCommand": "npm init gatsby my-gatsby-site"
  },
  "reactNative": {
    "name": "React Native App",
    "description": "Cross-platform mobile application",
    "category": "mobile",
    "installCommand": "npx react-native@latest init MyApp"
  },
  "flutter": {
    "name": "Flutter App",
    "description": "Cross-platform app with Flutter",
    "category": "mobile",
    "installCommand": "flutter create my_flutter_app"
  },
  "ionic": {
    "name": "Ionic App",
    "description": "Hybrid mobile app with Angular",
    "category": "mobile",
    "installCommand": "npm init @ionic/app my-ionic-app"
  },
  "nativeScript": {
    "name": "NativeScript App",
    "description": "Native mobile apps with JavaScript",
    "category": "mobile",
    "installCommand": "ns create my-ns-app"
  },
  "pwa": {
    "name": "Progressive Web App",
    "description": "Installable web application",
    "category": "mobile",
    "installCommand": "npx create-pwa-app my-pwa-app"
  },
  "capacitor": {
    "name": "Capacitor App",
    "description": "Native runtime for web apps",
    "category": "mobile",
    "installCommand": "npm init @capacitor/app my-capacitor-app"
  },
  "express": {
    "name": "Express.js API",
    "description": "Node.js API with Express",
    "category": "backend",
    "installCommand": "npx express-generator my-express-api"
  },
  "nestjs": {
    "name": "NestJS Application",
    "description": "Progressive Node.js framework",
    "category": "backend",
    "installCommand": "npx @nestjs/cli new my-nest-app"
  },
  "fastify": {
    "name": "Fastify API",
    "description": "Fast and low overhead web framework",
    "category": "backend",
    "installCommand": "npm init fastify my-fastify-api"
  },
  "graphql": {
    "name": "GraphQL API",
    "description": "Apollo Server with TypeScript",
    "category": "backend",
    "installCommand": "npm init @apollo/server my-graphql-api"
  },
  "microservices": {
    "name": "Microservices",
    "description": "Microservices architecture setup",
    "category": "backend",
    "installCommand": "npx create-microservices-app my-microservices"
  },
  "django": {
    "name": "Django API",
    "description": "Python web framework",
    "category": "backend"
  },
  "dotnet": {
    "name": ".NET Core API",
    "description": "C# web API with .NET Core",
    "category": "backend"
  },
  "golang": {
    "name": "Go API",
    "description": "Fast and efficient Go backend",
    "category": "backend",
    "installCommand": "go mod init my-go-api"
  },
  "spring": {
    "name": "Spring Boot API",
    "description": "Java-based enterprise framework",
    "category": "backend",
    "installCommand": "spring init --dependencies=web,data-jpa my-spring-api"
  },
  "laravel": {
    "name": "Laravel API",
    "description": "PHP web application framework",
    "category": "backend",
    "installCommand": "composer create-project laravel/laravel my-laravel-api"
  },
  "blog": {
    "name": "Blog Platform",
    "description": "Modern blog with Next.js and MDX",
    "category": "web",
    "installCommand": "npx create-next-app@latest my-blog --typescript --tailwind --mdx"
  },
  "portfolio": {
    "name": "Portfolio Website",
    "description": "Professional portfolio with Astro",
    "category": "web",
    "installCommand": "npm create astro@latest my-portfolio"
  },
  "docs": {
    "name": "Documentation Site",
    "description": "Technical documentation with VitePress",
    "category": "web",
    "installCommand": "npm create vitepress@latest my-docs"
  },
  "solid": {
    "name": "SolidJS App",
    "description": "High-performance reactive JavaScript library",
    "category": "front",
    "installCommand": "npx degit solidjs/templates/ts my-solid-app"
  },
  "qwik": {
    "name": "Qwik App",
    "description": "Instant-loading web applications",
    "category": "front",
    "installCommand": "npm create qwik@latest my-qwik-app"
  },
  "expo": {
    "name": "Expo App",
    "description": "React Native with Expo framework",
    "category": "mobile",
    "installCommand": "npx create-expo-app my-expo-app"
  },
  "tauri": {
    "name": "Tauri App",
    "description": "Lightweight desktop applications",
    "category": "mobile",
    "installCommand": "npm create tauri-app my-tauri-app"
  },
  "erp": {
    "name": "ERP System",
    "description": "Enterprise Resource Planning",
    "category": "enterprise",
    "installCommand": "npx create-next-app@latest my-erp --typescript --tailwind"
  },
  "cms": {
    "name": "Content Management",
    "description": "Enterprise CMS platform",
    "category": "enterprise",
    "installCommand": "npx create-strapi-app@latest my-cms"
  },
  "dashboard": {
    "name": "Admin Dashboard",
    "description": "Enterprise admin panel",
    "category": "enterprise"
  },
  "saas": {
    "name": "SaaS Platform",
    "description": "Software as a Service starter",
    "category": "enterprise"
  },
  "ai": {
    "name": "AI Application",
    "description": "AI-powered application setup",
    "category": "enterprise"
  },
  "crm": {
    "name": "CRM System",
    "description": "Customer relationship management",
    "category": "enterprise"
  },
  "analytics": {
    "name": "Analytics Platform",
    "description": "Data analytics dashboard",
    "category": "enterprise"
  },
  "security": {
    "name": "Security Suite",
    "description": "Enterprise security setup",
    "category": "enterprise"
  }
}
